package.json contains all npm dependencies
we use npm install to install / update dependencies / install modules
we now have the following modules to work with:
pg - node-postgres: Non-blocking PostgreSQL client for Node.js. Pure JavaScript and optional native libpq bindings.
argon2 - node-argon2: Argon2 is a password-hashing function that summarizes the state of the art in the design of memory-hard functions and can be used to hash passwords for credential storage, key derivation, or other applications.
express - express: Fast, unopinionated, minimalist web framework for node.
jwt - jsonwebtoken: An implementation of JSON Web Tokens.

Serverside - index.js
lines 1-8:
exported module content is imported with the use of Node.js require() function

line 17: the app oject is crea

line 25:
app.use
Mounts the specified middleware function or functions at the specified path:
the middleware function is executed when the base of the requested path matches path.
This is a middleware function with no mount path.
So, the function is executed every time the app receives a request.

express.json
The express.json() function is a built-in middleware function in Express.
It parses incoming requests with JSON payloads and is based on body-parser.

Middleware: Middleware functions are functions that have access to the request object (req), the response object (res), and the next middleware function in the application’s request-response cycle.

Routes: How an application’s (the app object) [matching] endpoints (path + http request method) respond to client requests (via handler function)

Promise: The Promise object represents the eventual completion (or failure) of an asynchronous operation and its resulting value.

line 27 - 48:
A route is defined with an endpoint comprised of the POST HTTP Request Method and api/auth/sign-up path.
The handler function has access to the contents of the request object's body property, which will contain an object with the username and password property
The username and password property of the request object's body are assigned to their corresponding variables
If either the variables return true with the bang operator, then an error is thrown
argon2.hash(password) returns a promise object containing the hashed passsword
if that promise is fulfilled, then the hashedPassword and username ($1,$2 and represented in params) are inserted into the database, into the users table, within the username and hashedPassword columns
if/once that promise is fulfilled, then the resulting first element from results.row (newly created row) is destructured and assigned to the variable user and is sent back as a response to the client

line 50 - 81
A route is defined with an endpoint comprised of the POST HTTP Request Method and api/auth/sign-in path
The handler function has access to the contents of the request object's body property, which will contain an object with the username and password property
The username and password property of the request object's body are assigned to their corresponding variables
If either the variables return true with the bang operator, then an error is thrown
